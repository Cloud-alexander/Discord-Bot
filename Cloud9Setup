Set Up Cloud9
Step 1.1: Create a Cloud9 Environment Log in to your AWS account and navigate to Cloud9 in the AWS Management Console. Click Create Environment. Name your environment (e.g., "DiscordBotEnv"). Choose Create a new EC2 instance for environment (direct access): Instance type: t2.micro (free tier eligible). Platform: Amazon Linux 2.

Click Next and Create Environment.

Step 1.2: Access the Cloud9 Environment Once created, your Cloud9 IDE will open in your browser. This is your coding environment directly connected to an EC2 instance.

Set Up the Environment Step 2.1: Update the Environment Open the terminal in Cloud9 and update the system

sudo yum update -y
     
Step 2.2: Install Required Libraries Install Python3 and Pip (if not already installed):


sudo yum install python3-pip -y
     
Install the necessary Python libraries:


pip install discord py-cord ec2-metadata
     
Configure the Discord Bot
Step 3.1: Register Your Bot Go to the Discord Developer Portal. - https://discord.com/developers/applications Create a new application and add a bot. Copy the bot's token for later use.

Step 3.2: Set Up Environment Variables In Cloud9, add the token as an environment variable:


echo "export TOKEN='YOUR_DISCORD_BOT_TOKEN'" >> ~/.bashrc
     

source ~/.bashrc
     
Verify the token is set:


echo $TOKEN
     
Write the Python Script
Step 4.1: Create the Script In the Cloud9 IDE, create a new file named discord_bot.py.

Step 4.2: Add the Code Paste this code:


import discord
from ec2_metadata import ec2_metadata
import os

# Initialize the bot
intents = discord.Intents.default()
client = discord.Client(intents=intents)

@client.event
async def on_ready():
    print(f'Logged in as {client.user}')
    print("Bot is ready and listening for commands.")

@client.event
async def on_message(message):
    if message.author == client.user:
        return  # Ignore messages from the bot itself

    try:
        # Respond to "hello world"
        if message.content.lower() == "hello world":
            await message.channel.send("Hello!")

        # Respond to "tell me about my server!"
        elif message.content.lower() == "tell me about my server!":
            try:
                info = (
                    f"**Server Info:**\n"
                    f"- **Public IP:** {ec2_metadata.public_ipv4 or 'Not Available'}\n"
                    f"- **Region:** {ec2_metadata.region or 'Not Available'}\n"
                    f"- **Availability Zone:** {ec2_metadata.availability_zone or 'Not Available'}"
                )
                await message.channel.send(info)
            except Exception as e:
                await message.channel.send(f"Error fetching server data: {e}")

        # Default response for unknown commands
        else:
            await message.channel.send("Sorry, I don't understand that command.")
    except Exception as general_error:
        await message.channel.send(f"An error occurred: {general_error}")

# Graceful error handling for connection issues
@client.event
async def on_error(event, *args, **kwargs):
    with open("error.log", "a") as log_file:
        log_file.write(f"Error in {event}: {args}\n")

# Token stored securely in an environment variable
token = os.getenv('TOKEN')
if not token:
    print("Error: Discord bot token not found in environment variables.")
else:
    client.run(token)

     
Run and Test the Bot
Step 5.1: Run the Script Execute the script in the terminal


python3 discord_bot.py
     
Step 5.2: Test in Discord

Go to your Discord server.

Send the message "hello world" to check for a response. Send "tell me about my server!" to get the EC2 metadata.

Document and Submit
Step 6.1: Take Screenshots Take a screenshot of the EC2 metadata output in the terminal. Take a screenshot of the bot's response in Discord.

Step 6.2: Upload to GitHub Initialize a repository in Cloud9


git init
     
Add your files:


echo "TOKEN" >> .gitignore
git add discord_bot.py .gitignore
git commit -m "Initial commit"
     
Push to GitHub


git remote add origin YOUR_REPO_URL
git push -u origin main
